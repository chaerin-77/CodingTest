/*
동물원

문제
어떤 동물원에 가로로 두칸 세로로 N칸인 아래와 같은 우리가 있다.

이 동물원에는 사자들이 살고 있는데 사자들을 우리에 가둘 때, 
가로로도 세로로도 붙어 있게 배치할 수는 없다. 
이 동물원 조련사는 사자들의 배치 문제 때문에 골머리를 앓고 있다.

동물원 조련사의 머리가 아프지 않도록 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자. 
사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.

입력
첫째 줄에 우리의 크기 N(1≤N≤100,000)이 주어진다.

출력
첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력하여라.
*/
#include <iostream>
#define mod 9901
#define MAX 100000
using namespace std;

int dp[MAX][3] = {0, };
// dp[N][0] = 해당 줄에 사자를 놓지 않을 경우
// dp[N][1] = 왼쪽에 사자
// dp[N][2] = 오른쪽에 사자

int main ()
{
    int N; cin >> N;

    dp[1][0] = dp[1][1] = dp[1][2] = 1;

    for (int i = 2; i <= N; i++)
    {
        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2]) % mod; // 사자를 놓지 않았을 경우 모든 경우 상관 없음
        dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % mod; // 사자를 왼쪽에 배치했기 때문에 이전 줄에 사자가 없거나 오른쪽
        dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % mod; // 사자를 오른쪽에 배치했기 때문에 이전 줄에 사자가 없거나 왼쪽
    }

    cout << (dp[N][0] + dp[N][1] + dp[N][2]) % mod << endl;
    return 0;
}